
// Generated by Volcano Development Platform - http://www.voldp.com

#include "stdafx.h"
#include "vol_user_app.h"

namespace rg_hsh_jymk
{

rg_j_wjml::rg_j_wjml ()
{
}

BOOL CALLBACK rg_j_wjml::rg_n8150 (CVolString& rg_n8151, CVolString& rg_n8152, BOOL rg_n8153)
{
    return CopyFileW(rg_n8151.GetText(), rg_n8152.GetText(), rg_n8153 == false);
}

INT CALLBACK rg_j_wjml::rg_n8190 (CVolString& rg_n8191, CVolString& rg_n8192, rg_hsh_jb::rg_wbshzl& rg_n8193, BOOL rg_n8194, BOOL rg_n8195)
{
    CVolString rg_n8196;
    CVolString rg_n8197;
    std::wstring FileDir = rg_n8191.GetText();
    if (FileDir.at(FileDir.length() - 1) != L'\\') FileDir += L'\\';
    WIN32_FIND_DATAW FindData;
    HANDLE hFind = FindFirstFileW((FileDir + rg_n8192.GetText()).c_str(), &FindData);
    if (hFind == INVALID_HANDLE_VALUE) return 0;
    do
    {
        if (wcscmp(FindData.cFileName, L".") == 0 || wcscmp(FindData.cFileName, L"..") == 0) continue;
        if ((FindData.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY) != 0)
        {
            if (rg_n8195)
            {
                rg_n8196.SetValueText((FileDir + FindData.cFileName).c_str());
    rg_n8190 (rg_n8196, rg_n8192, rg_n8193, rg_n8194, rg_n8195);
            }
            continue;
        }
        if (rg_n8194)
        {
            rg_n8197.SetValueText((FileDir + FindData.cFileName).c_str());
        }
        else
            rg_n8197.SetValueText(FindData.cFileName);
    rg_n8193.data ().Add2 (rg_n8197.GetText ());
    }
    while (FindNextFileW(hFind, &FindData));
    FindClose(hFind);
    return ((INT)rg_n8193.data ().GetCount ());
}

BOOL CALLBACK rg_j_wjml::rg_n8238 (CVolString& rg_n8239)
{
    return (PathIsDirectoryW(rg_n8239.GetText()) == FILE_ATTRIBUTE_DIRECTORY);
}

BOOL CALLBACK rg_j_wjml::rg_n8242 (CVolString& rg_n8243)
{
    return CreateDirectoryW(rg_n8243.GetText(), NULL);
}

CVolString CALLBACK rg_j_wjml::rg_n8254 (CVolString& rg_n8255)
{
    TCHAR Buffer[MAX_PATH] = { 0 };
    GetFileTitleW(rg_n8255.GetText(), Buffer, MAX_PATH);
    return Buffer;
}

}
