
// Generated by Volcano Development Platform - http://www.voldp.com

#ifndef __VCLS_RG_HSH_MFCJM_JB_CVOLWINCONTROL_H__
#define __VCLS_RG_HSH_MFCJM_JB_CVOLWINCONTROL_H__

namespace rg_hsh_MFCjm_jb
{

class CVolWinControl : public rg_hsh_jb::rg_ckdxl
{
    DECLARE_VOL_CLASS (rg_hsh_MFCjm_jb, CVolWinControl)

public:
    inline_ CMfcWndObject* GetMfcWndObject ()
    {
        ASSERT (ASSER_P_IS_INSTANCE_OF (GetRefObject (), CMfcWndObject) &&
                ((CMfcWndObject*)GetRefObject ())->GetRefWndPtr () != NULL);
        return (CMfcWndObject*)GetRefObject ();
    }
    inline_ CWnd* GetMfcWndPtrWithValidHWnd ()
    {
        return GetMfcWndObject ()->SafeGetRefWndPtrWithValidHWnd ();
    }
    inline_ CWnd* GetMfcWndPtrWithValidHWndNotNullObject ()
    {
        return (IsNullObject () ? NULL : GetMfcWndObject ()->SafeGetRefWndPtrWithValidHWnd ());
    }
    inline_ CWnd* SafeGetMfcWndPtrWithValidHWnd ()
    {
        return (this == NULL ? NULL : GetMfcWndPtrWithValidHWnd ());
    }
    inline_ HWND GetMfcWndHandle ()
    {
        return GetMfcWndObject ()->SafeGetRefWndHandle ();
    }
    inline_ HWND SafeGetMfcWndHandle ()
    {
        return (this == NULL ? NULL : GetMfcWndHandle ());
    }
    inline_ CWnd* GetMfcWndPtr ()
    {
        return GetMfcWndObject ()->GetRefWndPtr ();
    }
    inline_ DWORD GetControlStyle ()
    {
        CWnd* pWnd = GetMfcWndPtrWithValidHWnd ();
        return (pWnd == NULL ? GetMfcWndObject ()->m_dwAttrInitialStyle : pWnd->GetStyle ());
    }
    inline_ DWORD GetControlExStyle ()
    {
        CWnd* pWnd = GetMfcWndPtrWithValidHWnd ();
        return (pWnd == NULL ? GetMfcWndObject ()->m_dwAttrInitialExStyle : pWnd->GetExStyle ());
    }
    inline_ void _OnInitControl ()  {  }
    inline_ void _OnAfterEventAttached (BOOL blAttach)
    {
        if (blAttach)
            AttachEventListener ();
        else
            DetachEventListener ();
    }
    inline_ BOOL CreateVolControl (CVolWinControl* pParentControl, INT nLeft, INT nTop, INT nWidth, INT nHeight, INT nID)
    {
        CVolNativeWndCreateParam param (pParentControl->SafeGetMfcWndPtrWithValidHWnd (), nLeft, nTop, nWidth, nHeight, nID);
        return CreateMfcControl (&param);
    }
    virtual BOOL CreateMfcControl (CVolNativeWndCreateParam* pCreateParam)
    {
        ASSERT (pCreateParam != NULL);
        return FALSE;
    }
    virtual void OnBeforeNativeWndCreate (CVolNativeWndCreateParam* pCreateParam);
    virtual void OnCalcNativeWndPos (CVolNativeWndCreateParam* pCreateParam)  {  }
    virtual void OnAfterNativeWndCreate (CWnd* pWnd, const CVolNativeWndCreateParam* pCreateParam);
    virtual BOOL OnProcessNativeWndMsg (MSG* pMsg);
    virtual void OnBeforeDataOverwrite () override
    {
        DetachEventListener ();
    }
    virtual void AttachEventListener ()  {  }
    virtual void DetachEventListener ()  {  }
    virtual BOOL_P IsEventAttached ()  { return FALSE; }
    void AttachEventListenerIfNone ()  { if (IsEventAttached () == FALSE)  AttachEventListener (); }
    BOOL PopupSubMenuClass (INT xPos, INT yPos, CVolRuntimeClass* pVolMenuRuntimeClass, BOOL_P blpIsTrayMenu, INT_P npSubMenuIndex);

public:
    INT rg_n7804 (INT rg_n7805, INT rg_n7806, INT rg_n7807);
    INT rg_n7808 (INT rg_n7809, INT rg_n7810, INT rg_n7811);
    INT rg_n7812 (INT rg_n7813, INT rg_n7814, INT rg_n7815);
    INT rg_n7816 (INT rg_n7817, INT rg_n7818, INT rg_n7819);
    INT rg_n7820 (INT rg_n7821, INT rg_n7822, INT rg_n7823);
    INT rg_n7824 (INT rg_n7825, INT rg_n7826, INT rg_n7827);
    INT rg_n7828 (INT rg_n7829, INT rg_n7830);
    INT rg_n7831 (INT rg_n7832, INT rg_n7833);
    INT rg_n7834 (INT rg_n7835, INT rg_n7836);
    INT rg_n7837 ();
    INT rg_n7838 ();
    INT rg_n7839 (TCHAR rg_n7840);
    INT rg_n7841 (INT rg_n7842, INT rg_n7843, INT rg_n7844, INT rg_n7845, INT rg_n7846);
    void rg_n7848 (CVolString& rg_n7849);
    void rg_n7853 (BOOL rg_n7854);
    CVolWinControl ();

public:
    CVolString rg_n7888;

public:
    void ra_CVolWinControl_n7804 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber);
    void ra_CVolWinControl_n7808 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber);
    void ra_CVolWinControl_n7812 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber);
    void ra_CVolWinControl_n7816 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber);
    void ra_CVolWinControl_n7820 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber);
    void ra_CVolWinControl_n7824 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber);
    void ra_CVolWinControl_n7828 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber);
    void ra_CVolWinControl_n7831 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber);
    void ra_CVolWinControl_n7834 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber);
    void ra_CVolWinControl_n7837 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber);
    void ra_CVolWinControl_n7838 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber);
    void ra_CVolWinControl_n7839 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber);
    void ra_CVolWinControl_n7841 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber);

protected:
    CVolEventReceiver rw_20;
    CVolEventReceiver rw_21;
    CVolEventReceiver rw_22;
    CVolEventReceiver rw_23;
    CVolEventReceiver rw_24;
    CVolEventReceiver rw_25;
    CVolEventReceiver rw_26;
    CVolEventReceiver rw_27;
    CVolEventReceiver rw_28;
    CVolEventReceiver rw_29;
    CVolEventReceiver rw_30;
    CVolEventReceiver rw_31;
    CVolEventReceiver rw_32;
};

}

#endif  //__VCLS_RG_HSH_MFCJM_JB_CVOLWINCONTROL_H__
