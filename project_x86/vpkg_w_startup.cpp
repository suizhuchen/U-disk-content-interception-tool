
// Generated by Volcano Development Platform - http://www.voldp.com

#include "stdafx.h"
#include "vol_user_app.h"

CVolRuntimeClass* gGetStartupRuntimeClass ()
{
    return VOL_RUNTIME_CLASS (rg_hsh_chx::rg_qdl);
}
int gCallStartupMethod ()
{
    if (IsDebuggerPresent () == FALSE)
    {
        try
        {
            return ((rg_hsh_chx::rg_qdl&)g_objVolApp.GetVolApp ()).rg_n101 ();
        }
        catch (CVolException& e)
        {
            CVolString str;
            str.Format (_T ("俘获到异常,代码值为: %d, 描述为: %s"), e.m_nCode, e.m_strDesc.GetText ());
            ::MessageBox (NULL, str.GetText (), _T ("运行时异常"), (MB_OK | MB_ICONERROR));
        }
        catch (...)
        {
            ::MessageBox (NULL, _T ("程序在运行时抛出了未被管理的异常"), _T ("运行时异常"), (MB_OK | MB_ICONERROR));
        }
        exit (-1);
        return 0;
    }
    else
    {
        return ((rg_hsh_chx::rg_qdl&)g_objVolApp.GetVolApp ()).rg_n101 ();
    }
}
#ifndef _VOL_DISABLE_STANDARD_STARTUP
#if (defined (_CONSOLE) || defined (_VOL_CONSOLE_EXE))
int _tmain (int argc, _TCHAR* argv [])
{
    setlocale (LC_CTYPE, "");
    g_objVolApp.init (GetModuleHandle (NULL), argc, (const TCHAR**)argv, gGetStartupRuntimeClass ());
    const int nResult = gCallStartupMethod ();
    g_objVolApp.OnBeforeExit ();
    return nResult;
}
#elif (defined (_USRDLL) || defined (_VOL_DLL))
BOOL APIENTRY DllMain (HMODULE hModule, DWORD  ul_reason_for_call, LPVOID lpReserved)
{
    switch (ul_reason_for_call)
    {
    case DLL_PROCESS_ATTACH:
        g_objVolApp.init (hModule, 0, NULL, gGetStartupRuntimeClass ());
        return (gCallStartupMethod () != 0);
    case DLL_PROCESS_DETACH:  {
        if (IS_VOL_INSTANCE_OF (g_objVolApp.GetVolApp (), rg_hsh_jb::rg_dtkchxl))
            ((rg_hsh_jb::rg_dtkchxl&)g_objVolApp.GetVolApp ()).rg_n5834 ();
        g_objVolApp.OnBeforeExit ();
        break;  }
    }
    return TRUE;
}
#else
int APIENTRY _tWinMain (HINSTANCE hInstance, HINSTANCE hPrevInstance, LPTSTR lpCmdLine, int nCmdShow)
{
    g_objVolApp.init (hInstance, __argc, (const TCHAR**)__targv, gGetStartupRuntimeClass ());
    if (gCallStartupMethod () == 0)
    {
        g_objVolApp.OnBeforeExit ();
        return -1;
    }
    rg_hsh_jb::rg_chkchxl* pobjWinApp;
    if (IS_VOL_INSTANCE_OF (g_objVolApp.GetVolApp (), rg_hsh_jb::rg_chkchxl))
        pobjWinApp = (rg_hsh_jb::rg_chkchxl*)&g_objVolApp.GetVolApp ();
    else
        pobjWinApp = NULL;
    MSG msg;
    while (GetMessage (&msg, NULL, 0, 0))
    {
        if (pobjWinApp == NULL ||
                pobjWinApp->rg_n5825 ((INT_P)msg.hwnd, (INT)msg.message,
                    (INT_P)msg.wParam, (INT_P)msg.lParam, (INT_P)&msg))
        {
            TranslateMessage (&msg);
            DispatchMessage (&msg);
        }
    }
    if (pobjWinApp != NULL)
        pobjWinApp->rg_n5833 ();
    g_objVolApp.OnBeforeExit ();
    return 0;
}
#endif
#endif

namespace rg_hsh_jb
{

rg_chxl::rg_chxl ()
{
}
const CVolRuntimeClass** rg_chxl::GetSpecialUserRuntimeClasses  () const
{
    static const CVolRuntimeClass* cs_aRuntimeClasses [] =
    {
        VOL_RUNTIME_CLASS (rg_zjl),
        VOL_RUNTIME_CLASS (rg_dzhshl),
        VOL_RUNTIME_CLASS (rg_zfl),
        VOL_RUNTIME_CLASS (rg_zhshl),
        VOL_RUNTIME_CLASS (rg_bzhshl),
        VOL_RUNTIME_CLASS (rg_chzhshl),
        VOL_RUNTIME_CLASS (rg_xshl),
        VOL_RUNTIME_CLASS (rg_ljxl)
    };
    COMPILE_TIME_ASSERT (SUCT_PKG_SBYTE == 0 && SUCT_PKG_SHORT == 1 && SUCT_PKG_WCHAR == 2 && SUCT_PKG_INT == 3 &&
            SUCT_PKG_VINT == 4 && SUCT_PKG_LONG == 5 && SUCT_PKG_DOUBLE == 6 && SUCT_PKG_BOOL == 7 && SUCT_PKG_BOOL + 1 == _NUM_SPEC_USER_CLASS_TYPES &&
            _NUM_SPEC_USER_CLASS_TYPES == NUM_ELEMENTS_OF (cs_aRuntimeClasses));
    return cs_aRuntimeClasses;
}

rg_chkchxl::rg_chkchxl ()
{
}

BOOL rg_chkchxl::rg_n5825 (INT rg_n5826, INT rg_n5827, INT rg_n5828, INT rg_n5829, INT rg_n5830)
{
    return (TRUE);
}

BOOL rg_chkchxl::rg_n5831 (INT rg_n5832)
{
    return (FALSE);
}

void rg_chkchxl::rg_n5833 ()
{
}

rg_dtkchxl::rg_dtkchxl ()
{
}

void rg_dtkchxl::rg_n5834 ()
{
}

}
