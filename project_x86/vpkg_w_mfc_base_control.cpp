
// Generated by Volcano Development Platform - http://www.voldp.com

#include "stdafx.h"
#include "vol_user_app.h"

namespace rg_hsh_MFCjm_jb
{

rg_zjbjq::rg_zjbjq ()
{
    _OnInitExtra ();
}

rg_zjbjq::~rg_zjbjq ()
{
    _OnCleanupExtra ();
}
void rg_zjbjq::_OnInitExtra ()
{
    CMfcWndObject* pMfcWndObject = new CMfcWndObject (new CVWnd_Container (), FALSE);
    pMfcWndObject->m_dwAttrInitialStyle = (pMfcWndObject->m_dwAttrInitialStyle & ~(0)) | 0;
    pMfcWndObject->m_dwAttrInitialExStyle = (pMfcWndObject->m_dwAttrInitialExStyle & ~(0)) | 0;
    TakeOverNewRefObject (pMfcWndObject);
    _OnInitControl ();
}
BOOL rg_zjbjq::CreateMfcControl (CVolNativeWndCreateParam* pCreateParam)
{
    ASSERT (pCreateParam != NULL);
    CVWnd_Container* pWnd = (CVWnd_Container*)GetMfcWndPtr ();
    ASSERT (pWnd != NULL);
    if (pWnd->m_hWnd == NULL)
    {
        OnBeforeNativeWndCreate (pCreateParam);
        OnCalcNativeWndPos (pCreateParam);
        if (pWnd->CreateControl (pCreateParam))
        {
            if (pWnd->m_hWnd != NULL)
                OnAfterNativeWndCreate (pWnd, pCreateParam);
            return TRUE;
        }
    }
    return FALSE;
}
void rg_zjbjq::AttachEventListener ()
{
    ((CVWnd_Container*)GetMfcWndPtr ())->m_pEventListener = (IContainerEventListener*)this;
}
void rg_zjbjq::DetachEventListener ()
{
    CVWnd_Container* pwndControl = (CVWnd_Container*)GetMfcWndPtr ();
    if (pwndControl->m_pEventListener == (IContainerEventListener*)this)
        pwndControl->m_pEventListener = NULL;
}
BOOL_P rg_zjbjq::IsEventAttached ()
{
    return (((CVWnd_Container*)GetMfcWndPtr ())->m_pEventListener != NULL);
}

void rg_zjbjq::ra_zjbjq_n6181 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber)
{
    rw_2.SetReceiver (fnReceiver, pEventReceiver, nTagNumber);
    _OnAfterEventAttached (fnReceiver != NULL);
}

INT rg_zjbjq::rg_n6181 ()
{
    INT nTagNumber;
    VOID_FUNC pfnReceiver;
    CVolObject* pobjEventReceiver;
    if (rw_2.GetReceiver (&pfnReceiver, &pobjEventReceiver, &nTagNumber))
        return ((INT (*) (CVolObject* pobjEventReceiver, CVolObject* pobjEventSource, INT nTagNumber))pfnReceiver) (pobjEventReceiver, this, nTagNumber);
    else
        return 0;
}

void rg_zjbjq::ra_zjbjq_n6182 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber)
{
    rw_3.SetReceiver (fnReceiver, pEventReceiver, nTagNumber);
    _OnAfterEventAttached (fnReceiver != NULL);
}

INT rg_zjbjq::rg_n6182 ()
{
    INT nTagNumber;
    VOID_FUNC pfnReceiver;
    CVolObject* pobjEventReceiver;
    if (rw_3.GetReceiver (&pfnReceiver, &pobjEventReceiver, &nTagNumber))
        return ((INT (*) (CVolObject* pobjEventReceiver, CVolObject* pobjEventSource, INT nTagNumber))pfnReceiver) (pobjEventReceiver, this, nTagNumber);
    else
        return 0;
}

void rg_zjbjq::ra_zjbjq_n6183 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber)
{
    rw_4.SetReceiver (fnReceiver, pEventReceiver, nTagNumber);
    _OnAfterEventAttached (fnReceiver != NULL);
}

INT rg_zjbjq::rg_n6183 ()
{
    INT nTagNumber;
    VOID_FUNC pfnReceiver;
    CVolObject* pobjEventReceiver;
    if (rw_4.GetReceiver (&pfnReceiver, &pobjEventReceiver, &nTagNumber))
        return ((INT (*) (CVolObject* pobjEventReceiver, CVolObject* pobjEventSource, INT nTagNumber))pfnReceiver) (pobjEventReceiver, this, nTagNumber);
    else
        return 0;
}

void rg_zjbjq::ra_zjbjq_n6184 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber)
{
    rw_5.SetReceiver (fnReceiver, pEventReceiver, nTagNumber);
    _OnAfterEventAttached (fnReceiver != NULL);
}

INT rg_zjbjq::rg_n6184 ()
{
    INT nTagNumber;
    VOID_FUNC pfnReceiver;
    CVolObject* pobjEventReceiver;
    if (rw_5.GetReceiver (&pfnReceiver, &pobjEventReceiver, &nTagNumber))
        return ((INT (*) (CVolObject* pobjEventReceiver, CVolObject* pobjEventSource, INT nTagNumber))pfnReceiver) (pobjEventReceiver, this, nTagNumber);
    else
        return 0;
}

void rg_zjbjq::ra_zjbjq_n6185 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber)
{
    rw_6.SetReceiver (fnReceiver, pEventReceiver, nTagNumber);
    _OnAfterEventAttached (fnReceiver != NULL);
}

INT rg_zjbjq::rg_n6185 ()
{
    INT nTagNumber;
    VOID_FUNC pfnReceiver;
    CVolObject* pobjEventReceiver;
    if (rw_6.GetReceiver (&pfnReceiver, &pobjEventReceiver, &nTagNumber))
        return ((INT (*) (CVolObject* pobjEventReceiver, CVolObject* pobjEventSource, INT nTagNumber))pfnReceiver) (pobjEventReceiver, this, nTagNumber);
    else
        return 0;
}

void rg_zjbjq::ra_zjbjq_n6186 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber)
{
    rw_7.SetReceiver (fnReceiver, pEventReceiver, nTagNumber);
    _OnAfterEventAttached (fnReceiver != NULL);
}

INT rg_zjbjq::rg_n6186 ()
{
    INT nTagNumber;
    VOID_FUNC pfnReceiver;
    CVolObject* pobjEventReceiver;
    if (rw_7.GetReceiver (&pfnReceiver, &pobjEventReceiver, &nTagNumber))
        return ((INT (*) (CVolObject* pobjEventReceiver, CVolObject* pobjEventSource, INT nTagNumber))pfnReceiver) (pobjEventReceiver, this, nTagNumber);
    else
        return 0;
}

void rg_zjbjq::ra_zjbjq_n6187 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber)
{
    rw_8.SetReceiver (fnReceiver, pEventReceiver, nTagNumber);
    _OnAfterEventAttached (fnReceiver != NULL);
}

INT rg_zjbjq::rg_n6187 ()
{
    INT nTagNumber;
    VOID_FUNC pfnReceiver;
    CVolObject* pobjEventReceiver;
    if (rw_8.GetReceiver (&pfnReceiver, &pobjEventReceiver, &nTagNumber))
        return ((INT (*) (CVolObject* pobjEventReceiver, CVolObject* pobjEventSource, INT nTagNumber))pfnReceiver) (pobjEventReceiver, this, nTagNumber);
    else
        return 0;
}

rg_chkwzhxzhxx::rg_chkwzhxzhxx ()
{
}

BOOL rg_chkwzhxzhxx::_IsSelfEqual (const rg_chkwzhxzhxx& objCompare) const
{
    if (rg_n6206 != objCompare.rg_n6206)  return FALSE;
    if (rg_n6207 != objCompare.rg_n6207)  return FALSE;
    if (rg_n6208 != objCompare.rg_n6208)  return FALSE;
    if (rg_n6209 != objCompare.rg_n6209)  return FALSE;
    return TRUE;
}

void rg_chkwzhxzhxx::_CopySelfFrom (const rg_chkwzhxzhxx& objCopyFrom)
{
    rg_n6206 = objCopyFrom.rg_n6206;
    rg_n6207 = objCopyFrom.rg_n6207;
    rg_n6208 = objCopyFrom.rg_n6208;
    rg_n6209 = objCopyFrom.rg_n6209;
}
void rg_chkwzhxzhxx::Copy (const MINMAXINFO* lpMMI)
{
    rg_n6206.Copy ((const SIZE*)&lpMMI->ptMaxSize);
    rg_n6207.Copy (&lpMMI->ptMaxPosition);
    rg_n6208.Copy ((const SIZE*)&lpMMI->ptMinTrackSize);
    rg_n6209.Copy ((const SIZE*)&lpMMI->ptMaxTrackSize);
}
void rg_chkwzhxzhxx::Out (MINMAXINFO* lpMMI) const
{
    rg_n6206.Out ((SIZE*)&lpMMI->ptMaxSize);
    rg_n6207.Out (&lpMMI->ptMaxPosition);
    rg_n6208.Out ((SIZE*)&lpMMI->ptMinTrackSize);
    rg_n6209.Out ((SIZE*)&lpMMI->ptMaxTrackSize);
}

CVolWinForm::CVolWinForm ()
{
    _OnInitExtra ();
}

CVolWinForm::~CVolWinForm ()
{
    _OnCleanupExtra ();
}
void CVolWinForm::_OnInitExtra ()
{
    CMfcWndObject* pMfcWndObject = new CMfcWndObject (new CVWnd_WinForm (), FALSE);
    pMfcWndObject->m_dwAttrInitialStyle = (pMfcWndObject->m_dwAttrInitialStyle & ~(0)) | 0;
    pMfcWndObject->m_dwAttrInitialExStyle = (pMfcWndObject->m_dwAttrInitialExStyle & ~(0)) | 0;
    TakeOverNewRefObject (pMfcWndObject);
    _OnInitControl ();
}
BOOL CVolWinForm::CreateMfcControl (CVolNativeWndCreateParam* pCreateParam)
{
    ASSERT (pCreateParam != NULL);
    CVWnd_WinForm* pWnd = (CVWnd_WinForm*)GetMfcWndPtr ();
    ASSERT (pWnd != NULL);
    if (pWnd->m_hWnd == NULL)
    {
        OnBeforeNativeWndCreate (pCreateParam);
        OnCalcNativeWndPos (pCreateParam);
        if (pWnd->CreateControl (pCreateParam))
        {
            if (pWnd->m_hWnd != NULL)
                OnAfterNativeWndCreate (pWnd, pCreateParam);
            return TRUE;
        }
    }
    return FALSE;
}
void CVolWinForm::AttachEventListener ()
{
    ((CVWnd_WinForm*)GetMfcWndPtr ())->m_pEventListener = (IWinFormEventListener*)this;
}
void CVolWinForm::DetachEventListener ()
{
    CVWnd_WinForm* pwndControl = (CVWnd_WinForm*)GetMfcWndPtr ();
    if (pwndControl->m_pEventListener == (IWinFormEventListener*)this)
        pwndControl->m_pEventListener = NULL;
}
BOOL_P CVolWinForm::IsEventAttached ()
{
    return (((CVWnd_WinForm*)GetMfcWndPtr ())->m_pEventListener != NULL);
}

void CVolWinForm::ra_CVolWinForm_n6210 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber)
{
    rw_9.SetReceiver (fnReceiver, pEventReceiver, nTagNumber);
    _OnAfterEventAttached (fnReceiver != NULL);
}

INT CVolWinForm::rg_n6210 (INT rg_n6211)
{
    INT nTagNumber;
    VOID_FUNC pfnReceiver;
    CVolObject* pobjEventReceiver;
    if (rw_9.GetReceiver (&pfnReceiver, &pobjEventReceiver, &nTagNumber))
        return ((INT (*) (CVolObject* pobjEventReceiver, CVolObject* pobjEventSource, INT nTagNumber, INT rg_n6211))pfnReceiver) (pobjEventReceiver, this, nTagNumber, rg_n6211);
    else
        return 0;
}

void CVolWinForm::ra_CVolWinForm_n6212 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber)
{
    rw_10.SetReceiver (fnReceiver, pEventReceiver, nTagNumber);
    _OnAfterEventAttached (fnReceiver != NULL);
}

INT CVolWinForm::rg_n6212 (INT rg_n6213)
{
    INT nTagNumber;
    VOID_FUNC pfnReceiver;
    CVolObject* pobjEventReceiver;
    if (rw_10.GetReceiver (&pfnReceiver, &pobjEventReceiver, &nTagNumber))
        return ((INT (*) (CVolObject* pobjEventReceiver, CVolObject* pobjEventSource, INT nTagNumber, INT rg_n6213))pfnReceiver) (pobjEventReceiver, this, nTagNumber, rg_n6213);
    else
        return 0;
}

void CVolWinForm::ra_CVolWinForm_n6214 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber)
{
    rw_11.SetReceiver (fnReceiver, pEventReceiver, nTagNumber);
    _OnAfterEventAttached (fnReceiver != NULL);
}

INT CVolWinForm::rg_n6214 ()
{
    INT nTagNumber;
    VOID_FUNC pfnReceiver;
    CVolObject* pobjEventReceiver;
    if (rw_11.GetReceiver (&pfnReceiver, &pobjEventReceiver, &nTagNumber))
        return ((INT (*) (CVolObject* pobjEventReceiver, CVolObject* pobjEventSource, INT nTagNumber))pfnReceiver) (pobjEventReceiver, this, nTagNumber);
    else
        return 0;
}

void CVolWinForm::ra_CVolWinForm_n6215 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber)
{
    rw_12.SetReceiver (fnReceiver, pEventReceiver, nTagNumber);
    _OnAfterEventAttached (fnReceiver != NULL);
}

INT CVolWinForm::rg_n6215 ()
{
    INT nTagNumber;
    VOID_FUNC pfnReceiver;
    CVolObject* pobjEventReceiver;
    if (rw_12.GetReceiver (&pfnReceiver, &pobjEventReceiver, &nTagNumber))
        return ((INT (*) (CVolObject* pobjEventReceiver, CVolObject* pobjEventSource, INT nTagNumber))pfnReceiver) (pobjEventReceiver, this, nTagNumber);
    else
        return 0;
}

void CVolWinForm::ra_CVolWinForm_n6216 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber)
{
    rw_13.SetReceiver (fnReceiver, pEventReceiver, nTagNumber);
    _OnAfterEventAttached (fnReceiver != NULL);
}

INT CVolWinForm::rg_n6216 ()
{
    INT nTagNumber;
    VOID_FUNC pfnReceiver;
    CVolObject* pobjEventReceiver;
    if (rw_13.GetReceiver (&pfnReceiver, &pobjEventReceiver, &nTagNumber))
        return ((INT (*) (CVolObject* pobjEventReceiver, CVolObject* pobjEventSource, INT nTagNumber))pfnReceiver) (pobjEventReceiver, this, nTagNumber);
    else
        return 0;
}

void CVolWinForm::ra_CVolWinForm_n6217 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber)
{
    rw_14.SetReceiver (fnReceiver, pEventReceiver, nTagNumber);
    _OnAfterEventAttached (fnReceiver != NULL);
}

INT CVolWinForm::rg_n6217 ()
{
    INT nTagNumber;
    VOID_FUNC pfnReceiver;
    CVolObject* pobjEventReceiver;
    if (rw_14.GetReceiver (&pfnReceiver, &pobjEventReceiver, &nTagNumber))
        return ((INT (*) (CVolObject* pobjEventReceiver, CVolObject* pobjEventSource, INT nTagNumber))pfnReceiver) (pobjEventReceiver, this, nTagNumber);
    else
        return 0;
}

void CVolWinForm::ra_CVolWinForm_n6218 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber)
{
    rw_15.SetReceiver (fnReceiver, pEventReceiver, nTagNumber);
    _OnAfterEventAttached (fnReceiver != NULL);
}

INT CVolWinForm::rg_n6218 ()
{
    INT nTagNumber;
    VOID_FUNC pfnReceiver;
    CVolObject* pobjEventReceiver;
    if (rw_15.GetReceiver (&pfnReceiver, &pobjEventReceiver, &nTagNumber))
        return ((INT (*) (CVolObject* pobjEventReceiver, CVolObject* pobjEventSource, INT nTagNumber))pfnReceiver) (pobjEventReceiver, this, nTagNumber);
    else
        return 0;
}

void CVolWinForm::ra_CVolWinForm_n6219 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber)
{
    rw_16.SetReceiver (fnReceiver, pEventReceiver, nTagNumber);
    _OnAfterEventAttached (fnReceiver != NULL);
}

INT CVolWinForm::rg_n6219 (INT rg_n6220)
{
    INT nTagNumber;
    VOID_FUNC pfnReceiver;
    CVolObject* pobjEventReceiver;
    if (rw_16.GetReceiver (&pfnReceiver, &pobjEventReceiver, &nTagNumber))
        return ((INT (*) (CVolObject* pobjEventReceiver, CVolObject* pobjEventSource, INT nTagNumber, INT rg_n6220))pfnReceiver) (pobjEventReceiver, this, nTagNumber, rg_n6220);
    else
        return 0;
}

void CVolWinForm::ra_CVolWinForm_n6221 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber)
{
    rw_17.SetReceiver (fnReceiver, pEventReceiver, nTagNumber);
    _OnAfterEventAttached (fnReceiver != NULL);
}

INT CVolWinForm::rg_n6221 (rg_chkwzhxzhxx& rg_n6222)
{
    INT nTagNumber;
    VOID_FUNC pfnReceiver;
    CVolObject* pobjEventReceiver;
    if (rw_17.GetReceiver (&pfnReceiver, &pobjEventReceiver, &nTagNumber))
        return ((INT (*) (CVolObject* pobjEventReceiver, CVolObject* pobjEventSource, INT nTagNumber, rg_chkwzhxzhxx& rg_n6222))pfnReceiver) (pobjEventReceiver, this, nTagNumber, rg_n6222);
    else
        return 0;
}

void CVolWinForm::ra_CVolWinForm_n6223 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber)
{
    rw_18.SetReceiver (fnReceiver, pEventReceiver, nTagNumber);
    _OnAfterEventAttached (fnReceiver != NULL);
}

INT CVolWinForm::rg_n6223 ()
{
    INT nTagNumber;
    VOID_FUNC pfnReceiver;
    CVolObject* pobjEventReceiver;
    if (rw_18.GetReceiver (&pfnReceiver, &pobjEventReceiver, &nTagNumber))
        return ((INT (*) (CVolObject* pobjEventReceiver, CVolObject* pobjEventSource, INT nTagNumber))pfnReceiver) (pobjEventReceiver, this, nTagNumber);
    else
        return 0;
}

BOOL CVolWinForm::rg_n6224 (INT rg_n6225, INT rg_n6226, INT rg_n6227, INT rg_n6228, INT rg_n6229)
{
    return (TRUE);
}
void CVolWinForm::OnGetMinMaxInfo (MINMAXINFO* lpMMI)
{
    rg_chkwzhxzhxx inf (lpMMI);
    if (rg_n6221 (inf) != 0)
        inf.Out (lpMMI);
}
void CVolWinForm::OnBeforeNativeWndCreate (CVolNativeWndCreateParam* pCreateParam)
{
    BaseClass::OnBeforeNativeWndCreate (pCreateParam);
    ((CVWnd_WinForm*)GetMfcWndPtr ())->OnPrepareWindowStyle (pCreateParam);
}
void CVolWinForm::OnCalcNativeWndPos (CVolNativeWndCreateParam* pCreateParam)
{
    BaseClass::OnCalcNativeWndPos (pCreateParam);
    if (pCreateParam->m_nLeft == INT_MIN || pCreateParam->m_nTop == INT_MIN)
    {
        if ((pCreateParam->m_dwStyle & WS_CHILD) == 0)
        {
            RECT rtMonitor;
            GetMonitorRect (NULL, &rtMonitor);
            if (pCreateParam->m_nLeft == INT_MIN)
                pCreateParam->m_nLeft = (rtMonitor.left + rtMonitor.right - pCreateParam->m_nWidth) / 2;
            if (pCreateParam->m_nTop == INT_MIN)
                pCreateParam->m_nTop = (rtMonitor.top + rtMonitor.bottom - pCreateParam->m_nHeight) / 2;
        }
        else
        {
            if (pCreateParam->m_nLeft == INT_MIN)  pCreateParam->m_nLeft = 0;
            if (pCreateParam->m_nTop == INT_MIN)  pCreateParam->m_nTop = 0;
        }
    }
}
BOOL CVolWinForm::CreateVolWindowWithNewMenu (CVolWinForm* pParentWindow, INT nLeft, INT nTop, INT nWidth, INT nHeight, CVolRuntimeClass* pVolMenuRuntimeClass)
{
    rg_cchl* pVolMenuObject;
    if (pVolMenuRuntimeClass != NULL)
    {
        pVolMenuObject = (rg_cchl*)pVolMenuRuntimeClass->CreateObject ();
        ASSERT (P_IS_VOL_INSTANCE_OF (pVolMenuObject, rg_cchl));
    }
    else
        pVolMenuObject = NULL;
    CVolObjectDestroyer destroyer (pVolMenuObject);
    return CreateVolWindow (pParentWindow, nLeft, nTop, nWidth, nHeight, pVolMenuObject->SafeGetVolMenu ());
}
BOOL CVolWinForm::CreateVolWindow (CVolWinForm* pParentWindow, INT nLeft, INT nTop, INT nWidth, INT nHeight, CRefVolMenu* pVolMenu)
{
    CVolNativeWndCreateParam param (pParentWindow->SafeGetMfcWndPtrWithValidHWnd (), nLeft, nTop, nWidth, nHeight, 0);
    param.m_pVolMenu = pVolMenu;
    return CreateMfcControl (&param);
}
BOOL CVolWinForm::CreateMainVolWindowWithNewMenu (INT nLeft, INT nTop, INT nWidth, INT nHeight, CVolRuntimeClass* pVolMenuRuntimeClass)
{
    if (CreateVolWindowWithNewMenu (NULL, nLeft, nTop, nWidth, nHeight, pVolMenuRuntimeClass))
    {
        if (AfxGetApp () != NULL)
            AfxGetApp ()->m_pMainWnd = GetMfcWndPtrWithValidHWnd ();
        return TRUE;
    }
    return FALSE;
}
BOOL CVolWinForm::CreateMainVolWindow (INT nLeft, INT nTop, INT nWidth, INT nHeight, CRefVolMenu* pVolMenu)
{
    if (CreateVolWindow (NULL, nLeft, nTop, nWidth, nHeight, pVolMenu))
    {
        if (AfxGetApp () != NULL)
            AfxGetApp ()->m_pMainWnd = GetMfcWndPtrWithValidHWnd ();
        return TRUE;
    }
    return FALSE;
}
INT CVolWinForm::CreateVolDialogWithNewMenu (INT nLeft, INT nTop, INT nWidth, INT nHeight, CVolRuntimeClass* pVolMenuRuntimeClass, BOOL blForceUseDialogStyle)
{
    rg_cchl* pVolMenuObject;
    if (pVolMenuRuntimeClass != NULL)
    {
        pVolMenuObject = (rg_cchl*)pVolMenuRuntimeClass->CreateObject ();
        ASSERT (P_IS_VOL_INSTANCE_OF (pVolMenuObject, rg_cchl));
    }
    else
        pVolMenuObject = NULL;
    CVolObjectDestroyer destroyer (pVolMenuObject);
    return CreateVolDialog (nLeft, nTop, nWidth, nHeight, pVolMenuObject->SafeGetVolMenu (), blForceUseDialogStyle);
}
INT CVolWinForm::CreateVolDialog (INT nLeft, INT nTop, INT nWidth, INT nHeight, CRefVolMenu* pVolMenu, BOOL blForceUseDialogStyle)
{
    CVolNativeWndCreateParam param (GetMfcWndPtrWithValidHWnd (), nLeft, nTop, nWidth, nHeight, 0xFFFF);
    param.m_pVolMenu = pVolMenu;
    param.m_blModalDialog = TRUE;
    param.m_blForceUseDialogStyle = blForceUseDialogStyle;
    return (CreateMfcControl (&param) == FALSE ? -1 : param.m_nDialogResult);
}
void CVolWinForm::SetWndMenuClass (CVolRuntimeClass* pVolMenuRuntimeClass)
{
    if (pVolMenuRuntimeClass != NULL)
    {
        rg_cchl* pVolMenuObject = (rg_cchl*)pVolMenuRuntimeClass->CreateObject ();
        ASSERT (P_IS_VOL_INSTANCE_OF (pVolMenuObject, rg_cchl));
        SetWndMenu (pVolMenuObject->GetVolMenu ());
        pVolMenuObject->Destroy ();
    }
}

rg_annjchl::rg_annjchl ()
{
}

void rg_annjchl::ra_annjchl_n6361 (VOID_FUNC fnReceiver, CVolObjectPointer* pEventReceiver, INT nTagNumber)
{
    rw_19.SetReceiver (fnReceiver, pEventReceiver, nTagNumber);
    _OnAfterEventAttached (fnReceiver != NULL);
}

INT rg_annjchl::rg_n6361 ()
{
    INT nTagNumber;
    VOID_FUNC pfnReceiver;
    CVolObject* pobjEventReceiver;
    if (rw_19.GetReceiver (&pfnReceiver, &pobjEventReceiver, &nTagNumber))
        return ((INT (*) (CVolObject* pobjEventReceiver, CVolObject* pobjEventSource, INT nTagNumber))pfnReceiver) (pobjEventReceiver, this, nTagNumber);
    else
        return 0;
}
void rg_annjchl::SetButtonStyle (const DWORD dwStyle, const BOOL_P blpSet)
{
    if (blpSet)
        GetMfcWndObject ()->m_dwAttrInitialStyle |= dwStyle;
    else
        GetMfcWndObject ()->m_dwAttrInitialStyle &= ~dwStyle;
    CWnd* pWnd = GetMfcWndPtrWithValidHWnd ();
    if (pWnd != NULL)
    {
        pWnd->ModifyStyle (dwStyle, (GetMfcWndObject ()->m_dwAttrInitialStyle & dwStyle),
                (SWP_NOSIZE | SWP_NOMOVE | SWP_NOZORDER | SWP_NOACTIVATE | SWP_FRAMECHANGED | SWP_DRAWFRAME));
        pWnd->Invalidate ();
    }
}

rg_ann::rg_ann ()
{
    _OnInitExtra ();
}

rg_ann::~rg_ann ()
{
    _OnCleanupExtra ();
}
void rg_ann::_OnInitExtra ()
{
    CMfcWndObject* pMfcWndObject = new CMfcWndObject (new CVWnd_Button (), FALSE);
    pMfcWndObject->m_dwAttrInitialStyle = (pMfcWndObject->m_dwAttrInitialStyle & ~(0)) | WS_TABSTOP | BS_PUSHBUTTON | BS_MULTILINE;
    pMfcWndObject->m_dwAttrInitialExStyle = (pMfcWndObject->m_dwAttrInitialExStyle & ~(0)) | 0;
    TakeOverNewRefObject (pMfcWndObject);
    _OnInitControl ();
}
BOOL rg_ann::CreateMfcControl (CVolNativeWndCreateParam* pCreateParam)
{
    ASSERT (pCreateParam != NULL);
    CVWnd_Button* pWnd = (CVWnd_Button*)GetMfcWndPtr ();
    ASSERT (pWnd != NULL);
    if (pWnd->m_hWnd == NULL)
    {
        OnBeforeNativeWndCreate (pCreateParam);
        OnCalcNativeWndPos (pCreateParam);
        if (pWnd->CreateControl (pCreateParam))
        {
            if (pWnd->m_hWnd != NULL)
                OnAfterNativeWndCreate (pWnd, pCreateParam);
            return TRUE;
        }
    }
    return FALSE;
}
void rg_ann::AttachEventListener ()
{
    ((CVWnd_Button*)GetMfcWndPtr ())->m_pEventListener = (IButtonEventListener*)this;
}
void rg_ann::DetachEventListener ()
{
    CVWnd_Button* pwndControl = (CVWnd_Button*)GetMfcWndPtr ();
    if (pwndControl->m_pEventListener == (IButtonEventListener*)this)
        pwndControl->m_pEventListener = NULL;
}
BOOL_P rg_ann::IsEventAttached ()
{
    return (((CVWnd_Button*)GetMfcWndPtr ())->m_pEventListener != NULL);
}

}
